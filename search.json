[{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement matthew.warkentin@ucalgary.ca. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Matthew T. Warkentin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew T. Warkentin. Author, maintainer.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warkentin M (2024). openmpp: Programmatic Interface OpenM++. R package version 0.0.1, https://mattwarkentin.github.io/openmpp/, https://github.com/mattwarkentin/openmpp.","code":"@Manual{,   title = {openmpp: Programmatic Interface to OpenM++},   author = {Matthew T. Warkentin},   year = {2024},   note = {R package version 0.0.1,     https://mattwarkentin.github.io/openmpp/},   url = {https://github.com/mattwarkentin/openmpp}, }"},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"openmpp","dir":"","previous_headings":"","what":"Programmatic Interface to OpenM++","title":"Programmatic Interface to OpenM++","text":"goal openmpp provide programmatic interface OpenM++ API directly R simplify creating scenarios, running models, gathering results processing.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Programmatic Interface to OpenM++","text":"can install development version openmpp GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"mattwarkentin/openmpp\")"},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Programmatic Interface to OpenM++","text":"openmpp package contains many functions provide access nearly every OpenM++ API endpoint. However, users typically use smaller set functions common tasks.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"user-authentication","dir":"","previous_headings":"Usage","what":"User Authentication","title":"Programmatic Interface to OpenM++","text":"user required set local remote host address (.e., URL) OpenM++ API global project-specific .Renviron file order openmpp package authenticate communicate API behalf user. API running locally, set following environment variable .Renviron file: XXXX four digits corresponding specific local host address. aren’t sure host address, may contact OpenM++ administrator retrieve information. API running remotely, set following environment variables .Renviron file: Note URL, user name, password kept confidential committed version control (e.g., git). environment variables set, users may register local remote API connection R scripts. , see ?use_OpenMpp_local ?use_OpenMpp_remote information.","code":"OPENMPP_LOCAL_URL=http://localhost:XXXX OPENMPP_REMOTE_URL=... OPENMPP_REMOTE_USER=... OPENMPP_REMOTE_PWD=... library(openmpp) use_OpenMpp_local() library(openmpp) use_OpenMpp_remote()"},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"main-functions","dir":"","previous_headings":"Usage","what":"Main Functions","title":"Programmatic Interface to OpenM++","text":"Functions accessing tables models, worksets, model runs get_models() get_worksets() / get_scenarios() get_model_runs() / get_runs() Functions creating new worksets scenarios create_scenario() / create_workset() Functions loading models, worksets, model runs load_model() load_workset() / load_scenario() load_model_run() / load_run() load_model_runs() / load_runs() Functions deleting worksets model runs delete_workset() / delete_scenario() delete_model_run() / delete_run()","code":""},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"models-scenarios-runs-and-runsets","dir":"","previous_headings":"Usage","what":"Models, Scenarios, Runs, and RunSets","title":"Programmatic Interface to OpenM++","text":"4 main classes work using openmpp package: OpenMppModel, OpenMppWorkset, OpenMppModelRun, OpenMppModelRunSet. R6 classes. R6 encapsulated object-oriented programming system R. Use load_*() set functions load model, workset/scenario, model run, set model runs memory. Instances 4 classes methods fields associated . can access public methods fields using standard $ subset operator (e.g., obj$action() obj$field)","code":""},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"example","dir":"","previous_headings":"Usage","what":"Example","title":"Programmatic Interface to OpenM++","text":"work simple example creating new scenario, extracting parameters change, changing parameters, running model, extracting results. Let’s see models available: can now see worksets model runs exist given model. Now can load RiskPaths model inspect. now load Default set input parameters RiskPaths model. Finally, load base run RiskPaths model. create new scenario based parameters RiskPaths_Default model run. load new scenario, copy AgeBaselinePreg1 parameter base run. Let’s reduce fertility rate 10% across age groups… now run model give name 'ExampleRun'. use wait = TRUE flag make sure want model run finish returning R session. use progress = FALSE avoid printing progress bars document. Note model runs may take long time number simulation cases large. Note can use opts argument opts_run() function configure run. default, models run 5,000 simulation cases 12 SubValues. allows quick model runs faster iteration, users want increase number simulation cases performing full model run. Now model run complete, let’s load memory. can now extract output table Tables field model run object (example_run$Tables). Great, created new scenario, modified parameters, ran model, extracted output tables. last step, load multiple model runs memory compare . extract new table models. Note extra column, RunName added indicate model run output table data corresponds . can even plot using ggplot2! Note number simulation cases ExampleRun low results trusted! demonstration purposes.  sure longer need scenario model run, can use delete_scenario() delete_run() clean things !","code":"library(openmpp) library(dplyr) library(ggplot2)  use_OpenMpp_remote() get_models() #> # A tibble: 34 × 7 #>    ModelId Name              Digest  Type Version CreateDateTime DefaultLangCode #>      <int> <chr>             <chr>  <int> <chr>   <chr>          <chr>           #>  1     101 OncoSim-allcance… 24892…     0 3.6.4.4 2024-08-09 16… EN              #>  2     101 OncoSim-breast    e1f97…     0 3.6.4.4 2024-08-09 15… EN              #>  3     101 OncoSim-cervical  a9583…     0 3.6.4.4 2024-08-09 15… EN              #>  4     101 OncoSim-colorect… 0636a…     0 3.6.4.4 2024-08-09 15… EN              #>  5     101 OncoSim-gmm       5dc68…     0 3.6.4.4 2024-08-09 15… EN              #>  6     101 OncoSim-lung      de02f…     0 3.6.4.4 2024-08-09 16… EN              #>  7     101 OncoSim-allcance… a746a…     0 3.6.3.9 2024-03-19 13… EN              #>  8     101 OncoSim-breast    4f35e…     0 3.6.3.9 2024-03-19 12… EN              #>  9     101 OncoSim-cervical  c851a…     0 3.6.3.9 2024-03-19 13… EN              #> 10     101 OncoSim-colorect… 52248…     0 3.6.3.9 2024-03-19 13… EN              #> # ℹ 24 more rows get_worksets('RiskPaths') #> # A tibble: 1 × 10 #>   ModelName ModelDigest     ModelVersion ModelCreateDateTime Name  BaseRunDigest #>   <chr>     <chr>           <chr>        <chr>               <chr> <chr>         #> 1 RiskPaths d90e1e9a49a06d… 3.0.0.0      2024-02-16 20:32:4… Defa… \"\"            #> # ℹ 4 more variables: IsReadonly <lgl>, UpdateDateTime <chr>, #> #   IsCleanBaseRun <lgl>, Txt <list> get_runs('RiskPaths') #> # A tibble: 1 × 15 #>   ModelName ModelDigest          ModelVersion ModelCreateDateTime Name  SubCount #>   <chr>     <chr>                <chr>        <chr>               <chr>    <int> #> 1 RiskPaths d90e1e9a49a06d972ec… 3.0.0.0      2024-02-16 20:32:4… Risk…        1 #> # ℹ 9 more variables: SubStarted <int>, SubCompleted <int>, #> #   CreateDateTime <chr>, Status <chr>, UpdateDateTime <chr>, RunId <int>, #> #   RunDigest <chr>, ValueDigest <chr>, RunStamp <chr> rp <- load_model('RiskPaths') rp #> ── OpenM++ Model ─────────────────────────────────────────────────────────────── #> → ModelName: RiskPaths #> → ModelVersion: 3.0.0.0 #> → ModelDigest: d90e1e9a49a06d972ecf1d50e684c62b rp_default <- load_scenario('RiskPaths', 'Default') rp_default #> ── OpenM++ Workset ───────────────────────────────────────────────────────────── #> → ModelName: RiskPaths #> → ModelVersion: 3.0.0.0 #> → ModelDigest: d90e1e9a49a06d972ecf1d50e684c62b #> → WorksetName: Default #> → BaseRunDigest: baserun_digest <- rp$ModelRuns$RunDigest[[1]] rp_baserun <- load_run('RiskPaths', baserun_digest) rp_baserun #> ── OpenM++ ModelRun ──────────────────────────────────────────────────────────── #> → ModelName: RiskPaths #> → ModelVersion: 3.0.0.0 #> → ModelDigest: d90e1e9a49a06d972ecf1d50e684c62b #> → RunName: RiskPaths_Default #> → RunDigest: 134517d057d2008d01c9dbc418247ae3 create_scenario('RiskPaths', 'MyNewScenario', baserun_digest) my_scenario <- load_scenario('RiskPaths', 'MyNewScenario') my_scenario$copy_params('AgeBaselinePreg1') half_rate <- my_scenario$Parameters$AgeBaselinePreg1  half_rate <-   half_rate |>    mutate(across(-sub_id, \\(x) x * 0.9))  my_scenario$Parameters$AgeBaselinePreg1 <- half_rate my_scenario$ReadOnly <- TRUE my_scenario$run('ExampleRun', wait = TRUE, progress = FALSE) example_run <- load_run('RiskPaths', 'ExampleRun') example_run #> ── OpenM++ ModelRun ──────────────────────────────────────────────────────────── #> → ModelName: RiskPaths #> → ModelVersion: 3.0.0.0 #> → ModelDigest: d90e1e9a49a06d972ecf1d50e684c62b #> → RunName: ExampleRun #> → RunDigest: 204a176d2c10350a58d7b3ba9cca235b example_run$Tables$T06_BirthsByUnion #> # A tibble: 7 × 3 #>   expr_name Dim0                   expr_value #>   <chr>     <chr>                       <dbl> #> 1 Expr0     US_NEVER_IN_UNION         1205.   #> 2 Expr0     US_FIRST_UNION_PERIOD1    2944.   #> 3 Expr0     US_FIRST_UNION_PERIOD2     333.   #> 4 Expr0     US_AFTER_FIRST_UNION        10.0  #> 5 Expr0     US_SECOND_UNION             72.0  #> 6 Expr0     US_AFTER_SECOND_UNION        1.00 #> 7 Expr0     all                       4565. rp_runs <- load_runs('RiskPaths', rp$ModelRuns$RunDigest) rp_runs #> ── OpenM++ ModelRunSet ───────────────────────────────────────────────────────── #> → ModelName: RiskPaths #> → ModelVersion: 3.0.0.0 #> → ModelDigest: d90e1e9a49a06d972ecf1d50e684c62b #> → RunNames: [RiskPaths_Default, ExampleRun] #> → RunDigests: [134517d057d2008d01c9dbc418247ae3, 204a176d2c10350a58d7b3ba9cca235b] births <- rp_runs$Tables$T06_BirthsByUnion births #> # A tibble: 14 × 4 #>    RunName           expr_name Dim0                   expr_value #>    <chr>             <chr>     <chr>                       <dbl> #>  1 RiskPaths_Default Expr0     US_NEVER_IN_UNION         1285    #>  2 RiskPaths_Default Expr0     US_FIRST_UNION_PERIOD1    2986    #>  3 RiskPaths_Default Expr0     US_FIRST_UNION_PERIOD2     293    #>  4 RiskPaths_Default Expr0     US_AFTER_FIRST_UNION        11    #>  5 RiskPaths_Default Expr0     US_SECOND_UNION             57    #>  6 RiskPaths_Default Expr0     US_AFTER_SECOND_UNION        1    #>  7 RiskPaths_Default Expr0     all                       4633    #>  8 ExampleRun        Expr0     US_NEVER_IN_UNION         1205.   #>  9 ExampleRun        Expr0     US_FIRST_UNION_PERIOD1    2944.   #> 10 ExampleRun        Expr0     US_FIRST_UNION_PERIOD2     333.   #> 11 ExampleRun        Expr0     US_AFTER_FIRST_UNION        10.0  #> 12 ExampleRun        Expr0     US_SECOND_UNION             72.0  #> 13 ExampleRun        Expr0     US_AFTER_SECOND_UNION        1.00 #> 14 ExampleRun        Expr0     all                       4565. births |>    ggplot(aes(Dim0, expr_value, fill = RunName)) +   geom_col(position = position_dodge()) +   labs(x = NULL, y = 'Number of births by union') +   coord_flip() +   theme_minimal() +   theme(legend.position = 'bottom')"},{"path":"https://mattwarkentin.github.io/openmpp/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Programmatic Interface to OpenM++","text":"Please note openmpp project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/admin_models_refresh.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Administrative Tasks — admin_models_refresh","title":"OpenM++ Administrative Tasks — admin_models_refresh","text":"Functions performing administrative tasks.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/admin_models_refresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Administrative Tasks — admin_models_refresh","text":"","code":"admin_models_refresh()  admin_models_close()  admin_database_close(model)  admin_database_open(path)  admin_database_cleanup(path, name = NULL, digest = NULL)  admin_cleanup_logs()  admin_cleanup_log(name)  admin_models_pause(pause)  admin_models_pause_all(pause)  admin_service_shutdown()"},{"path":"https://mattwarkentin.github.io/openmpp/reference/admin_models_refresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Administrative Tasks — admin_models_refresh","text":"model Model digest model name. path Path model database file relative models/bin folder. example, name model \".sqlite\" extension. name Model name. Optional admin_cleanup_db(). digest Model digest. Optional admin_cleanup_db(). pause Logical. Whether pause resume model runs queue processing.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/admin_models_refresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Administrative Tasks — admin_models_refresh","text":"list nothing, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/create_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Model Scenarios — create_scenario","title":"Manage Model Scenarios — create_scenario","text":"Manage Model Scenarios","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/create_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Model Scenarios — create_scenario","text":"","code":"create_scenario(model, name, base = NULL)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/create_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Model Scenarios — create_scenario","text":"model Model name digest. name New scenario name. base Base run digest (optional).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/create_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Model Scenarios — create_scenario","text":"Nothing, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Metadata — get_model","title":"OpenM++ Model Metadata — get_model","text":"Functions get list models load specific model definition.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Metadata — get_model","text":"","code":"get_model(model)  get_models()  get_models_list()"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Metadata — get_model","text":"model Model digest model name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Metadata — get_model","text":"list tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_lang_list.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Extras — get_model_lang_list","title":"OpenM++ Model Extras — get_model_lang_list","text":"Functions retrieving extra model information, including language lists, word lists, profiles, profile lists.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_lang_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Extras — get_model_lang_list","text":"","code":"get_model_lang_list(model)  get_model_word_list(model)  get_model_profile(model, profile)  get_model_profile_list(model)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_lang_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Extras — get_model_lang_list","text":"model Model digest model name. profile Profile name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_lang_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Extras — get_model_lang_list","text":"list JSON response object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_run.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Runs — get_model_run","title":"OpenM++ Model Runs — get_model_run","text":"Functions retrieve model run metadata delete model runs.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Runs — get_model_run","text":"","code":"get_model_run(model, run)  get_run(model, run)  get_model_runs_list(model)  get_model_runs(model)  get_runs(model)  get_model_run_status(model, run)  get_run_status(model, run)  get_model_run_list_status(model, run)  get_model_run_status_first(model)  get_model_run_status_last(model)  get_model_run_status_compl(model)  delete_model_run(model, run)  delete_run(model, run)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Runs — get_model_run","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp task run name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Runs — get_model_run","text":"list, tibble, nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_task.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Task — get_model_task","title":"OpenM++ Model Task — get_model_task","text":"Functions getting creating, updating, retrieving, deleting model tasks.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Task — get_model_task","text":"","code":"get_model_task(model, task)  get_model_tasks_list(model)  get_model_tasks(model)  get_model_task_worksets(model, task)  get_model_task_hist(model, task)  get_model_task_status(model, task, run)  get_model_task_run_list_status(model, task, run)  get_model_task_run_first(model, task)  get_model_task_run_last(model, task)  get_model_task_run_compl(model, task)  create_task(data)  update_task(data)  delete_task(model, task)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Task — get_model_task","text":"model Model digest model name. task Modeling task. run Model run digest, run stamp run name, modeling task run stamp task run name. data Data used body request.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_model_task.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Task — get_model_task","text":"list, tibble, nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_microdata.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Run Microdata — get_run_microdata","title":"OpenM++ Run Microdata — get_run_microdata","text":"Functions retrieving microdata model runs.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_microdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Run Microdata — get_run_microdata","text":"","code":"get_run_microdata(model, run, name)  get_run_microdata_csv(model, run, name)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_microdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Run Microdata — get_run_microdata","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp, task run name. name Output table name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_microdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Run Microdata — get_run_microdata","text":"list tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_table.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Output Tables — get_run_table","title":"OpenM++ Output Tables — get_run_table","text":"Functions retrieving output tables model runs.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Output Tables — get_run_table","text":"","code":"get_run_table(model, run, name)  get_run_table_csv(model, run, name)  get_run_table_calc_csv(model, run, name, calc)  get_run_table_comparison_csv(model, run, name, compare, variant)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Output Tables — get_run_table","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp task run name. name Output table name. calc Name calculation. One \"avg\", \"sum\", \"count\", \"max\", \"min\", \"var\", \"sd\", \"se\", \"cv\". compare Comparison calculate. One \"diff\", \"ratio\", \"percent\". Comparisons base run relative variant run (.e., \"diff\" difference values represented Variant - Base). variant Run digest, name, stamp variant model run.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_run_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Output Tables — get_run_table","text":"list tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_service_config.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Service State — get_service_config","title":"OpenM++ Service State — get_service_config","text":"Functions retrieving deleting service information.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_service_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Service State — get_service_config","text":"","code":"get_service_config()  get_service_state()  get_active_job_state(job)  get_queue_job_state(job)  get_hist_job_state(job)  set_queue_job_pos(pos, job)  delete_job_hist(job)  get_archive_state()"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_service_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Service State — get_service_config","text":"job Model run submission time stamp. pos Position.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_service_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Service State — get_service_config","text":"list JSON response object, nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_user_views.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage OpenM++ User Files or Settings — get_user_views","title":"Manage OpenM++ User Files or Settings — get_user_views","text":"Functions getting, setting, deleting user configuration settings.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_user_views.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage OpenM++ User Files or Settings — get_user_views","text":"","code":"get_user_views(model)  set_user_views(model, data)  delete_user_views(model)  get_user_files(ext = \"*\", path = \"\")"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_user_views.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage OpenM++ User Files or Settings — get_user_views","text":"model Model digest model name. data Data used body request. ext Comma-separated string file extensions. Default \"*\" returns files. path Optional file path. Default \"\" (empty) returns entire tree user files.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_user_views.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage OpenM++ User Files or Settings — get_user_views","text":"list JSON response object nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Worksets — get_workset","title":"OpenM++ Model Worksets — get_workset","text":"Functions creating, copying, merging, retrieving, deleting worksets.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Worksets — get_workset","text":"","code":"get_workset(model, set)  get_worksets_list(model)  get_worksets(model)  get_scenarios(model)  get_workset_status(model, set)  get_workset_status_default(model)  set_workset_readonly(model, set, readonly)  create_workset(data)  merge_workset(workset)  update_workset_param_csv(workset, csv)  replace_workset(workset)  delete_workset(model, set)  delete_workset_param(model, set, name)  update_workset_param(model, set, name, data)  copy_param_run_to_workset(model, set, name, run)  merge_param_run_to_workset(model, set, name, run)  copy_param_workset_to_workset(model, set, name, from)  merge_param_workset_to_workset(model, set, name, from)  upload_workset_params(model, set, data)  delete_scenario(model, set)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Worksets — get_workset","text":"model Model digest model name. set Name workset (input set model parameters). readonly Boolean. workset read-? data Data used body request. workset Workset metadata. csv CSV file path. name Output table name. run Model run digest, run stamp run name, modeling task run stamp task run name. Source workset name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Worksets — get_workset","text":"list, tibble, nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset_param.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Workset and Run Parameters — get_workset_param","title":"OpenM++ Workset and Run Parameters — get_workset_param","text":"Functions retrieving parameters worksets model runs.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset and Run Parameters — get_workset_param","text":"","code":"get_workset_param(model, set, name)  get_workset_param_csv(model, set, name)  get_run_param(model, run, name)  get_run_param_csv(model, run, name)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset and Run Parameters — get_workset_param","text":"model Model digest model name. set Name workset (input set model parameters). name Output table name. run Model run digest, run stamp run name, modeling task run stamp task run name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/get_workset_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Workset and Run Parameters — get_workset_param","text":"list tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_model_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download model, model run results, or input parameters — initiate_model_download","title":"Download model, model run results, or input parameters — initiate_model_download","text":"Functions download model, model run results, input parameters.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_model_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download model, model run results, or input parameters — initiate_model_download","text":"","code":"initiate_model_download(model)  initiate_run_download(model, run)  initiate_workset_download(model, set)  delete_download_files(folder)  delete_download_files_async(folder)  get_download_log(name)  get_download_logs_model(model)  get_download_logs_all()  get_download_filetree(folder)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_model_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download model, model run results, or input parameters — initiate_model_download","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp task run name. set Name workset (input set model parameters). folder Download folder file name. name Output table name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_model_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download model, model run results, or input parameters — initiate_model_download","text":"Nothing, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_run_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload model runs or worksets — initiate_run_upload","title":"Upload model runs or worksets — initiate_run_upload","text":"Functions upload model run results input parameters (worksets).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_run_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload model runs or worksets — initiate_run_upload","text":"","code":"initiate_run_upload(model, run, data)  initiate_workset_upload(model, set, data)  delete_upload_files(folder)  delete_upload_files_async(folder)  get_upload_log(name)  get_upload_logs_model(model)  get_upload_logs_all()  get_upload_filetree(folder)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_run_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload model runs or worksets — initiate_run_upload","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp task run name. data Data used body request. set Name workset (input set model parameters). folder Upload folder file name. name Output table name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/initiate_run_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload model runs or worksets — initiate_run_upload","text":"Nothing, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/is_compatible.html","id":null,"dir":"Reference","previous_headings":"","what":"Are data frames compatible? — is_compatible","title":"Are data frames compatible? — is_compatible","text":"data frames compatible?","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/is_compatible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are data frames compatible? — is_compatible","text":"","code":"is_compatible(x, y)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/is_compatible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are data frames compatible? — is_compatible","text":"x New parameters. y Old parameters","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Class — load_model","title":"OpenM++ Model Class — load_model","text":"OpenM++ Model Class","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Class — load_model","text":"","code":"load_model(model)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Class — load_model","text":"model Model digest model name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Class — load_model","text":"OpenMppModel instance.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OpenM++ Model Class — load_model","text":"OpenMppType OpenM++ object type (used print() method). ModelDigest Model digest. ModelName Model name. ModelVersion Model version. ModelMetadata Model metadata. ParamsInfo Input parameter information. TablesInfo Output table information.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenM++ Model Class — load_model","text":"ModelWorksets Data frame worksets. ModelScenarios Data frame scenarios. ModelRuns Data frame model runs. ModelTasks Data frame model tasks.","code":""},{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenM++ Model Class — load_model","text":"OpenMppModel$new() OpenMppModel$print()","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenM++ Model Class — load_model","text":"Create new OpenMppModel object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Class — load_model","text":"","code":"OpenMppModel$new(model)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Class — load_model","text":"model Model digest name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Model Class — load_model","text":"new OpenMppModel object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenM++ Model Class — load_model","text":"Print OpenMppModel object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Class — load_model","text":"","code":"OpenMppModel$print(...)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Class — load_model","text":"... currently used.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Model Class — load_model","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ ModelRun Class — load_model_run","title":"OpenM++ ModelRun Class — load_model_run","text":"OpenM++ ModelRun Class","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"load_model_run(model, run)  load_run(model, run)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"model Model digest model name. run Model run digest, run stamp run name, modeling task run stamp task run name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ ModelRun Class — load_model_run","text":"OpenMppModelRun instance.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenM++ ModelRun Class — load_model_run","text":"load_run() alias load_model_run().","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OpenM++ ModelRun Class — load_model_run","text":"openmpp::OpenMppModel -> OpenMppModelRun","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OpenM++ ModelRun Class — load_model_run","text":"RunName Run name. RunDigest Run digest. RunStamp Run stamp. RunMetadata Run metadata. Parameters Model run parameters. Tables Model run output tables OpenMppType OpenM++ object type (used print()).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenM++ ModelRun Class — load_model_run","text":"RunStatusInfo Run status information. RunStatus Run status.","code":""},{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenM++ ModelRun Class — load_model_run","text":"OpenMppModelRun$new() OpenMppModelRun$print() OpenMppModelRun$get_table() OpenMppModelRun$get_table_calc() OpenMppModelRun$get_table_comparison() OpenMppModelRun$write_table() OpenMppModelRun$write_tables() OpenMppModelRun$get_log() OpenMppModelRun$write_log()","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenM++ ModelRun Class — load_model_run","text":"Create new OpenMppModelRun object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$new(model, run)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"model Model digest name. run Run digest, run stamp, run name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"new OpenMppModelRun object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenM++ ModelRun Class — load_model_run","text":"Print OpenMppModelRun object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$print(...)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"... currently used.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-get-table-","dir":"Reference","previous_headings":"","what":"Method get_table()","title":"OpenM++ ModelRun Class — load_model_run","text":"Retrieve table.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$get_table(name)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"name Table name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-get-table-calc-","dir":"Reference","previous_headings":"","what":"Method get_table_calc()","title":"OpenM++ ModelRun Class — load_model_run","text":"Retrieve table calculation.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$get_table_calc(name, calc)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"name Table name. calc Name calculation. One \"avg\", \"sum\", \"count\", \"max\", \"min\", \"var\", \"sd\", \"se\", \"cv\".","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-get-table-comparison-","dir":"Reference","previous_headings":"","what":"Method get_table_comparison()","title":"OpenM++ ModelRun Class — load_model_run","text":"Retrieve table comparison.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$get_table_comparison(name, compare, variant)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"name Table name. compare Comparison calculate. One \"diff\", \"ratio\", \"percent\". variant Run digest, name, stamp variant model run.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-write-table-","dir":"Reference","previous_headings":"","what":"Method write_table()","title":"OpenM++ ModelRun Class — load_model_run","text":"Write output table disk (CSV).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$write_table(name, file)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"name Table name. file File path.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-write-tables-","dir":"Reference","previous_headings":"","what":"Method write_tables()","title":"OpenM++ ModelRun Class — load_model_run","text":"Write output tables disk (CSV).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$write_tables(dir)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"dir Directory path.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-get-log-","dir":"Reference","previous_headings":"","what":"Method get_log()","title":"OpenM++ ModelRun Class — load_model_run","text":"Get console log model run.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$get_log()"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"method-write-log-","dir":"Reference","previous_headings":"","what":"Method write_log()","title":"OpenM++ ModelRun Class — load_model_run","text":"Write console log model run disk.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRun Class — load_model_run","text":"","code":"OpenMppModelRun$write_log(dir)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRun Class — load_model_run","text":"dir Directory save log file.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_run.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRun Class — load_model_run","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ ModelRunSet Class — load_model_runs","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"OpenM++ ModelRunSet Class","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"load_model_runs(model, runs)  load_runs(model, runs)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"model Model name digest. runs Character vector model run names, digests, stamps.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"OpenMppModelRunSet instance.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"load_runs() alias load_model_runs().","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"ModelDigest Model digest. ModelName Model name. ModelVersion Model version. OpenMppType OpenM++ object type (used print()). Tables Model run output tables","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"RunNames Run names. RunDigests Run digests. RunStamps Run stamps. RunStatuses Run statuses. RunMetadatas Run metadatas.","code":""},{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"OpenMppModelRunSet$new() OpenMppModelRunSet$print() OpenMppModelRunSet$get_table() OpenMppModelRunSet$get_table_calc() OpenMppModelRunSet$write_table() OpenMppModelRunSet$write_tables()","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Create new OpenMppModelRunSet object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$new(model, runs)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"model Model digest name. runs Run digests, run stamps, run names.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"new OpenMppModelRunSet object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Print OpenMppModelRunSet object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$print(...)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"... currently used.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-get-table-","dir":"Reference","previous_headings":"","what":"Method get_table()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Retrieve table.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$get_table(name)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"name Table name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-get-table-calc-","dir":"Reference","previous_headings":"","what":"Method get_table_calc()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Retrieve table calculation.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$get_table_calc(name, calc)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"name Table name. calc Name calculation. One \"avg\", \"sum\", \"count\", \"max\", \"min\", \"var\", \"sd\", \"se\", \"cv\".","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-write-table-","dir":"Reference","previous_headings":"","what":"Method write_table()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Write output table disk (CSV).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$write_table(name, file)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"name Table name. file File path.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"method-write-tables-","dir":"Reference","previous_headings":"","what":"Method write_tables()","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Write output tables disk (CSV).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"","code":"OpenMppModelRunSet$write_tables(dir)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"dir Directory path.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_model_runs.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ ModelRunSet Class — load_model_runs","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Workset Class — load_workset","title":"OpenM++ Workset Class — load_workset","text":"OpenM++ Workset Class","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"load_workset(model, set)  load_scenario(model, set)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"model Model digest model name. set Name workset (input set model parameters).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Workset Class — load_workset","text":"OpenMppWorkset instance.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenM++ Workset Class — load_workset","text":"load_scenario() alias load_workset().","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OpenM++ Workset Class — load_workset","text":"openmpp::OpenMppModel -> OpenMppWorkset","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"OpenM++ Workset Class — load_workset","text":"WorksetName Workset name. WorksetMetadata Workset metadata. OpenMppType OpenM++ object type (used print()). Parameters Workset parameters.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenM++ Workset Class — load_workset","text":"ReadOnly Workset read-status. BaseRunDigest Base run digest input parameters.","code":""},{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenM++ Workset Class — load_workset","text":"OpenMppWorkset$new() OpenMppWorkset$print() OpenMppWorkset$set_base_digest() OpenMppWorkset$delete_base_digest() OpenMppWorkset$copy_params() OpenMppWorkset$delete_params() OpenMppWorkset$get_param() OpenMppWorkset$set_param() OpenMppWorkset$run()","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenM++ Workset Class — load_workset","text":"Create new OpenMppWorkset object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$new(model, set)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"model Model digest name. set Workset name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"new OpenMppWorkset object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenM++ Workset Class — load_workset","text":"Print OpenMppWorkset object.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$print(...)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"... currently used.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-set-base-digest-","dir":"Reference","previous_headings":"","what":"Method set_base_digest()","title":"OpenM++ Workset Class — load_workset","text":"Set base run digest.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$set_base_digest(base)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"base Base run digest.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-delete-base-digest-","dir":"Reference","previous_headings":"","what":"Method delete_base_digest()","title":"OpenM++ Workset Class — load_workset","text":"Delete base run digest.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$delete_base_digest()"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-copy-params-","dir":"Reference","previous_headings":"","what":"Method copy_params()","title":"OpenM++ Workset Class — load_workset","text":"Copy parameters base scenario.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$copy_params(names)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"names Character vector parameter names.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-delete-params-","dir":"Reference","previous_headings":"","what":"Method delete_params()","title":"OpenM++ Workset Class — load_workset","text":"Delete parameters scenario.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$delete_params(names)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"names Character vector parameter names.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-get-param-","dir":"Reference","previous_headings":"","what":"Method get_param()","title":"OpenM++ Workset Class — load_workset","text":"Retrieve parameter.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$get_param(name)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"name Parameter name.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"tibble.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-set-param-","dir":"Reference","previous_headings":"","what":"Method set_param()","title":"OpenM++ Workset Class — load_workset","text":"Set parameter.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$set_param(name, data)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"name Parameter name. data New parameter data.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"OpenM++ Workset Class — load_workset","text":"Initiate model run model workset/scenario.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Workset Class — load_workset","text":"","code":"OpenMppWorkset$run(   name,   opts = opts_run(),   wait = FALSE,   wait_time = 0.2,   progress = TRUE )"},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Workset Class — load_workset","text":"name Run name. opts Run options. See opts_run() details. wait Logical. wait model run done? wait_time Number seconds wait status checks. progress Logical. progress bar shown?","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/load_workset.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"OpenM++ Workset Class — load_workset","text":"Self, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/openmpp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openmpp: Programmatic Interface to OpenM++ — openmpp-package","title":"openmpp: Programmatic Interface to OpenM++ — openmpp-package","text":"programmatic interface OpenM++ microsimulation platform.","code":""},{"path":[]},{"path":"https://mattwarkentin.github.io/openmpp/reference/openmpp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openmpp: Programmatic Interface to OpenM++ — openmpp-package","text":"Maintainer: Matthew T. Warkentin matthew.warkentin@ucalgary.ca (ORCID)","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/opts_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Configuration Options — opts_run","title":"Run Configuration Options — opts_run","text":"Run Configuration Options","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/opts_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Configuration Options — opts_run","text":"","code":"opts_run(   SimulationCases = 5000,   SubValues = 12,   RunStamp = TimeStamp(),   Opts = list(),   ... )  # S3 method for class 'OpenMppRunOpts' print(x, ...)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/opts_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Configuration Options — opts_run","text":"SimulationCases Number cases simulate. Default 5000. SubValues Number sub values. Default 12. RunStamp Run stamp. Default generated based current time. Opts Additional options pass Opts list component. ... run options. x Object print.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/opts_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Configuration Options — opts_run","text":"default number SimulationCases low enable rapid iteration increased running model results expected robust.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Models and Monitor Progress — run_model","title":"Run Models and Monitor Progress — run_model","text":"Run Models Monitor Progress","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Models and Monitor Progress — run_model","text":"","code":"run_model(data)  get_model_run_state(model, stamp)  get_run_state(model, stamp)  stop_model_run(model, stamp)  stop_run(model, stamp)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Models and Monitor Progress — run_model","text":"data Data used body POST request. model Model digest name. stamp Model run stamp.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Models and Monitor Progress — run_model","text":"list nothing, invisibly.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/touch_model_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ Model Profile — touch_model_profile","title":"OpenM++ Model Profile — touch_model_profile","text":"Functions creating, modifying, deleting profiles profile options.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/touch_model_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ Model Profile — touch_model_profile","text":"","code":"touch_model_profile(model, data)  delete_model_profile(model, profile)  set_model_profile_opt(model, profile, key, value)  delete_model_profile_opt(model, profile, key)"},{"path":"https://mattwarkentin.github.io/openmpp/reference/touch_model_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ Model Profile — touch_model_profile","text":"model Model digest model name. data Data used body request. profile Profile name. key Option key. value Option value.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/touch_model_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ Model Profile — touch_model_profile","text":"list JSON response object nothing (invisibly).","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/use_OpenMpp_local.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenM++ API Connections — use_OpenMpp_local","title":"OpenM++ API Connections — use_OpenMpp_local","text":"Register connection OpenM++ Application Programming Interface (API). Currently, two different API connections \"local\" \"remote\" available. Note \"local\" \"remote\" describe API running relative machine running R session. example, users logged cloud-hosted RStudio Server sessions acceess API running locally. use machine running local network may use remote connection connect cloud-based API.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/use_OpenMpp_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenM++ API Connections — use_OpenMpp_local","text":"","code":"use_OpenMpp_local(url = Sys.getenv(\"OPENMPP_LOCAL_URL\"), ...)  use_OpenMpp_remote(   url = Sys.getenv(\"OPENMPP_REMOTE_URL\"),   user = Sys.getenv(\"OPENMPP_REMOTE_USER\"),   pwd = Sys.getenv(\"OPENMPP_REMOTE_PWD\"),   ... )"},{"path":"https://mattwarkentin.github.io/openmpp/reference/use_OpenMpp_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenM++ API Connections — use_OpenMpp_local","text":"url URl making API requests. See Details instructions. ... currently used. user User name logging remote API. See Details instructions. pwd Password logging remote API. See Details instructions.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/use_OpenMpp_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenM++ API Connections — use_OpenMpp_local","text":"Nothing, invisibly. Behind--scenes, instance OpenMppLocal OpenMppRemote R6 classes created. objects accessed directly user, instead, package internally uses connections communicate OpenM++ API.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/reference/use_OpenMpp_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenM++ API Connections — use_OpenMpp_local","text":"user name password (pwd) sensitive information shared. avoid hard-coding user name password R scripts, recommend declaring information global project-specific .Renviron file. approach may used declare URLs making API requests. URLs typically sensitive information, keeping information one place makes sense consistency. local remote API connections, set following environment variables .Renviron files: OPENMPP_LOCAL_URL: URL local API connection. OPENMPP_REMOTE_URL: URL remote API connection. OPENMPP_REMOTE_USER: User name logging remote API connection. OPENMPP_REMOTE_PWD: Password logging remote API connection.","code":""},{"path":"https://mattwarkentin.github.io/openmpp/news/index.html","id":"openmpp-development-version","dir":"Changelog","previous_headings":"","what":"openmpp (development version)","title":"openmpp (development version)","text":"Package active development.","code":""}]
